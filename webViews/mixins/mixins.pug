mixin createPostForm(userLoggedIn)
    .postFormContainer 
        .userImageContainer
            img(src=`${userLoggedIn.profilePic}`,alt="User's profile picture")
        .textareaContainer 
            textarea#postTextArea(placeholder="What's hanppening?")
            .buttonsContainer 
                button#submitPostButton(disabled='') Post

//-src=`${userLoggedIn.profilePic}` or src=userLoggedIn.profilePic both ok
mixin createReplyModal(userLoggedIn)
    #replyModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='replyModalLabel', aria-hidden='true')
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5#replyModalLabel.modal-title Reply
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') &times;
                .modal-body
                    #originalPostContainer
                    .postFormContainer 
                        .userImageContainer
                            img(src=userLoggedIn.profilePic,alt="User's profile picture")
                        .textareaContainer 
                            textarea#replyTextArea(placeholder="What are your thoughts?")
                .modal-footer
                    button.btn.btn-secondary(type='button', data-dismiss='modal') Close
                    button#submitReplyButton.btn.btn-primary(type='button',disabled="") Save changes


mixin createDeletePostModal(userLoggedIn)
    #deletePostModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='deletePostModalLabel', aria-hidden='true')
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5#deletePostModalLabel.modal-title Delete the post?
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') &times;
                .modal-body
                    p You wont be able to delete this
                .modal-footer
                    button.btn.btn-secondary(type='button', data-dismiss='modal') Close
                    button#deletePostButton.btn.btn-primary(type='button') Delete


mixin createPostModal(userLoggedIn)
    +createReplyModal(userLoggedIn)
    +createDeletePostModal(userLoggedIn)

mixin createFollowButton(user,isFollowing)
    - text = isFollowing?"Following":"Follow"
    - buttonClass = isFollowing?"followButton following":"followButton"
    //-button(class=buttonClass,data-userid=user._id) #{text}
    button(class=`${buttonClass}`,data-userid=`${user._id}`)=`${text}` 
    //-button(class=`${buttonClass}`,data-userid=user._id)=text
    //-above three ok

mixin createTab(name, href, isSelected)
    - className = isSelected ? "tab active" : "tab"
    a(href=href,class=className)
        span #{name}


mixin createImageUploadModal(userLoggedIn)
    #imageUploadModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='imageUploadModalLabel', aria-hidden='true')
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5#imageUploadModalLabel.modal-title Upload a new profile picture
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') &times;
                .modal-body
                    input#filePhoto(type="file", name="filePhoto")
                    //-above key line

                    .imagePreviewContainer 
                        img#imagePreview(src="", alt="")
                    
                .modal-footer
                    button.btn.btn-secondary(type='button', data-dismiss='modal') Cancel
                    button#imageUploadButton.btn.btn-primary(type='button') Save

mixin createCoverPhotoUploadModal(userLoggedIn)
    #coverPhotoUploadModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='coverPhotoUploadModalLabel', aria-hidden='true')
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5#coverPhotoUploadModalLabel.modal-title Upload a new cover photo
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') &times;
                .modal-body
                    input#coverPhoto(type="file", name="filePhoto")
                    //-above key line

                    .imagePreviewContainer 
                        img#coverPhotoPreview(src="", alt="")
                    
                .modal-footer
                    button.btn.btn-secondary(type='button', data-dismiss='modal') Cancel
                    button#coverPhotoUploadButton.btn.btn-primary(type='button') Save



mixin createPinnedPostModal(userLoggedIn)
    #confirmPinModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='confirmPinModalLabel', aria-hidden='true')
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5#confirmPinModalLabel.modal-title Pin this post?
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') &times;
                .modal-body
                    p This post will appear at the top of your profile. You can only pin one post                   
                .modal-footer
                    button.btn.btn-secondary(type='button', data-dismiss='modal') Cancel
                    button#pinPostButton.btn.btn-primary(type='button') Pin

    +createUnpinPostModal()



mixin createUnpinPostModal()
    #unpinModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='unpinModalLabel', aria-hidden='true')
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5#unpinModalLabel.modal-title Unpin this post?
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') &times;
                .modal-body
                    p This post will be unpinned                   
                .modal-footer
                    button.btn.btn-secondary(type='button', data-dismiss='modal') Cancel
                    button#unpinPostButton.btn.btn-primary(type='button') Unpin


//-for chatPage.pug
mixin createChatImage(chatData,userLoggedIn)
    //- 2 objects as arguments
    if(!chatData)
        return 

    - var i=0
    - var maxImages2Show=3
    - var remainingUsers=chatData.users.length-maxImages2Show 
    - remainingUsers -- //remove one as we wont show out own image


    .chatImagesContainer 

        if remainingUsers>0 
            .userCount 
                span +#{remainingUsers}
        //-above userCounter b4 below users array/list img display; coz row-reverse in css
        each user in chatData.users
            if(chatData.users.length!=1&&user.id==userLoggedIn_chat._id)
                -continue
            else if i>=maxImages2Show 
                -break

            img(src=`${user.profilePic}`,alt="User's profile picture", title=`{user.fName}`)
            //- img(src=user.profilePic,alt="User's profile picture", title=user.fName)
            //- users being populated by get('/messages/:chatid') from non-api-messageRoutesJs
            - i++

mixin createChatNameModal(chat)
    #chatNameModal.modal.fade(tabindex='-1', role='dialog', aria-labelledby='chatNameModalLabel', aria-hidden='true')
        .modal-dialog(role='document')
            .modal-content
                .modal-header
                    h5#chatNameModalLabel.modal-title Change the name
                    button.close(type='button', data-dismiss='modal', aria-label='Close')
                        span(aria-hidden='true') &times;
                .modal-body
                    input#chatNameTextbox(type="text", placeholder='Enter a name for this chat',value=chat.chatName) 
                    //- or value=chat.chatName or value=`${chat.chatName}`     
                    //- chat.chatName: if no chatName field in db then no value field in html Element inspect; if chatName='' indb then <value>
                    //- both above show placeholder in the inputbox bar
                    //- `${chat.chatName}`: if no chatName field in db then <value="undefined"> in html Element inspect;
                    //- `${chat.chatName}`: if chatName='' indb then <value> & shows placeholder in the inputbox bar
                    //- value=`${chat.chatName}` or value=chat.chatName show either defualt name or chat name if both defined in '/messages/chatid' messagesRoutesJs
                .modal-footer
                    button.btn.btn-secondary(type='button', data-dismiss='modal') Cancel
                    button#chatNameButton.btn.btn-primary(type='button') Save